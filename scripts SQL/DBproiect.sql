CREATE SEQUENCE USER_ID_SEQUENCE START WITH 2;

CREATE TABLE USERS(
    USER_ID NUMBER(6) DEFAULT USER_ID_SEQUENCE.NEXTVAL,
    USERNAME VARCHAR2(20) CONSTRAINT USERNAME_NN NOT NULL,
    USER_PASSWORD VARCHAR2(20) CONSTRAINT PASSWORD_NN NOT NULL,
    USER_TYPE NUMBER(1) CONSTRAINT USER_TYPE_NN NOT NULL,
    BIRTH_DATE DATE CONSTRAINT BIRTH_DATE_NN NOT NULL,
    PHONE_NUMBER CHAR(10) CONSTRAINT PHONE_NUMBER_NN NOT NULL,
    FIRST_NAME VARCHAR2(10),
    LAST_NAME VARCHAR2(10),
    EMAIL VARCHAR2(25),
    CONSTRAINT USER_ID_PK PRIMARY KEY (USER_ID),
    CONSTRAINT USER_NAME_UQ UNIQUE (USERNAME),
    CONSTRAINT USER_NAME_CK CHECK (LENGTH(USERNAME) >= 3 ),
    CONSTRAINT PASSWORD_CK CHECK (LENGTH(USER_PASSWORD) >= 4 AND REGEXP_LIKE(USER_PASSWORD, '[[:alpha:]]') AND REGEXP_LIKE(USER_PASSWORD, '[[:digit:]]') ),
    CONSTRAINT USER_TYPE_CK CHECK (USER_TYPE = 0 OR USER_TYPE = 1),
    CONSTRAINT PHONE_NUMBER_CK CHECK (REGEXP_LIKE(PHONE_NUMBER, '07[0-9]{8}')),
    CONSTRAINT AGE_CK CHECK (MONTHS_BETWEEN('05-JAN-2024', BIRTH_DATE) / 12 >= 18),
    CONSTRAINT EMAIL_CK CHECK (EMAIL LIKE '%@%.%')
);

CREATE TABLE INSTRUCTOR_DETAILS(
    INSTRUCTOR_ID NUMBER(6),
    PLATE_NUMBER CHAR(7),
    CAR_BRAND VARCHAR2(10),
    CAR_MODEL VARCHAR2(10),
    CONSTRAINT INSTRUCTOR_ID_PK PRIMARY KEY (INSTRUCTOR_ID),
    CONSTRAINT INSTRUCTOR_ID_FK FOREIGN KEY (INSTRUCTOR_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT PLATE_NUMBER_CK CHECK (REGEXP_LIKE(PLATE_NUMBER, '^((AB|AG|AR|BC|BH|BN|BR|BT|BV|BZ|CJ|CL|CS|CT|CV|DB|DJ|GJ|GL|GR|HD|HR|IF|IL|IS|MH|MM|MS|NT|OT|PH|SB|SJ|SM|SV|TL|TM|TR|VL|VN|VS)[0-9]{2}[A-Z]{3})|(B[0-9]{3}[A-Z]{3})$'))
);

CREATE TABLE STUDENT_DETAILS(
    STUDENT_ID NUMBER(6),
    INSTRUCTOR_ID NUMBER(6),
    EXPIRATION_DATE DATE CONSTRAINT EXPIRATION_DATE_NN NOT NULL,
    COURSES_LEFT NUMBER(2),
    CONSTRAINT STUDENT_ID_PK PRIMARY KEY (STUDENT_ID),
    CONSTRAINT STUDENT_ID_FK FOREIGN KEY (STUDENT_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT INSTRUCTOR_ID_STUDENT_FK FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTOR_DETAILS(INSTRUCTOR_ID),
    CONSTRAINT EXPIRATION_DATE_CK CHECK ('05-JAN-2024' <= EXPIRATION_DATE),
    CONSTRAINT COURSES_LEFT_CK CHECK (COURSES_LEFT >= 0)
);

CREATE TABLE SCHEDULE(
    STUDENT_ID NUMBER(6),
    INSTRUCTOR_ID NUMBER(6),
    COURSE_HOUR DATE,
    CONSTRAINT STUDENT_ID_SCHEDULE_FK FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_DETAILS(STUDENT_ID),
    CONSTRAINT INSTRUCTOR_ID_SCHEDULE_FK FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTOR_DETAILS(INSTRUCTOR_ID),
    CONSTRAINT COURSE_HOUR_CK CHECK (COURSE_HOUR > '05-JAN-2024')
);